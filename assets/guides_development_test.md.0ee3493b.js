import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.d2db4bec.js";const h=JSON.parse('{"title":"Testing your app","description":"","frontmatter":{},"headers":[],"relativePath":"guides/development/test.md","filePath":"guides/development/test.md"}'),p={name:"guides/development/test.md"},e=l(`<h1 id="testing-your-app" tabindex="-1">Testing your app <a class="header-anchor" href="#testing-your-app" aria-label="Permalink to &quot;Testing your app&quot;">​</a></h1><p>As based on the <a href="https://kalisio.github.io/kdk/guides/development/test.html" target="_blank" rel="noreferrer">KDK</a>, The <strong>kApp</strong> relies on the <a href="https://mochajs.org/" target="_blank" rel="noreferrer">Mocha</a> testing framework and the <a href="https://www.chaijs.com/" target="_blank" rel="noreferrer">Chai</a> assertion library.</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><p>From the root folder run the server-side tests:</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>To run the server-side tests, the server must not be running.</p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$yarn test:server</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$yarn test:server</span></span></code></pre></div><p>This will lint and fix issues in the code according to <a href="https://github.com/feross/standard" target="_blank" rel="noreferrer">JS standard</a>, then execute tests using <a href="https://mochajs.org/" target="_blank" rel="noreferrer">Mocha</a> and compute code coverage using <a href="https://github.com/bcoe/c8" target="_blank" rel="noreferrer">c8</a>.</p><p>From the backend <code>api</code> folder you can also run the server-side tests like for modules:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># with lint/coverage</span></span>
<span class="line"><span style="color:#E1E4E8;">$yarn test</span></span>
<span class="line"><span style="color:#6A737D;"># without lint/coverage</span></span>
<span class="line"><span style="color:#E1E4E8;">$yarn mocha</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># with lint/coverage</span></span>
<span class="line"><span style="color:#24292E;">$yarn test</span></span>
<span class="line"><span style="color:#6A737D;"># without lint/coverage</span></span>
<span class="line"><span style="color:#24292E;">$yarn mocha</span></span></code></pre></div><h2 id="client" tabindex="-1">Client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;Client&quot;">​</a></h2><p>From the root folder run the client-side tests:</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>To run the client-side tests, you must first <a href="./develop.html#web-app">run the web app</a>.</p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$yarn test:client</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$yarn test:client</span></span></code></pre></div><p>This will execute tests using <a href="https://mochajs.org/" target="_blank" rel="noreferrer">Mocha</a>/<a href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noreferrer">Puppeteer</a> and compute code coverage using <a href="https://github.com/bcoe/c8" target="_blank" rel="noreferrer">c8</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>By default the tests will assume that youy web app run on the default <code>8080</code> port or the one provided through the <code>CLIENT_PORT</code> environment variable. If a <a href="./deploy.html#deployment-flavors">deployment flavor</a> is defined it will target the application domain defined as <code>https://\${appName}.\${p<wbr>rocess.env.SUBDOMAIN}</code>.</p></div><p>From the root folder you can also run the client-side tests without coverage like for the API:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$yarn mocha</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$yarn mocha</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you need to run some specific tests suite only, you can use the <code>-g</code> or <code>--grep</code> option of the <code>mocha</code> command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$yarn mocha -g </span><span style="color:#9ECBFF;">&quot;suite:groups&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># run the groups tests</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$yarn mocha -g </span><span style="color:#032F62;">&quot;suite:groups&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># run the groups tests</span></span></code></pre></div></div><p>Some tests, notably involving web mapping, might rely on screenshots comparison, as a consequence the tests can be run in different modes:</p><ul><li><code>preview</code> mode to only run tests without comparing to reference screenshots, useful when tweaking the test</li><li><code>run</code> mode to run tests by comparing to reference screenshots, useful to perform non-regression testing (default mode)</li><li><code>record</code> mode to run tests and update reference screenshots, useful to save reference images just before releasing</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can use the <code>TEST_MODE</code> environment variable to change the test mode.</p></div><h3 id="writing-client-tests" tabindex="-1">Writing client tests <a class="header-anchor" href="#writing-client-tests" aria-label="Permalink to &quot;Writing client tests&quot;">​</a></h3><p>In addition to <strong>Mocha</strong> and <strong>Chai</strong> helpers, the <strong>KDK</strong> provides helper functions to test your UI using <a href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noreferrer">Puppeteer</a>:</p><ul><li><p>test your UI components: the <strong>Runner class</strong> allows you to manage a <strong>Puppereer</strong> browser as well as the default page attached to this browser. In addition, it provides a useful inteface to override permissions, set items in local storage, catch warnings and error messages from the console, take screenshots and compare them to some reference images.</p></li><li><p>deal with your app&#39;s API: the <strong>Api class</strong> allows you to access the differents services exposed by the API.</p></li><li><p>structure your project test structure: the <strong>KDK</strong> assumes that a directory has been assigned to each <strong>test suite</strong> in order to store test data. These directories, are stored in a more general <code>data</code> directory and must be named with the <strong>test suite</strong> name. If you have any screenshot references then then they must stored in a decidacted sub directory named <code>screenrefs</code>.</p></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">test</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">data</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite#1</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite#2</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">screenrefs</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite#3</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">screenrefs</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite1.test.js</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite2.test.js</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite3.test.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">test</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">data</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite#1</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite#2</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">screenrefs</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite#3</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">screenrefs</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite1.test.js</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite2.test.js</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite3.test.js</span></span></code></pre></div><p>When running the test data are generally generated in order to be compared to the static test data. The <strong>Runner</strong> creates a <code>run</code> directory where it stores for the browser (e.g. chrome, firefox) the data for each <strong>test suite</strong>. For instance:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">test</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#B392F0;">_run</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">chrome</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite#1</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite#2</span></span>
<span class="line"><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">suite#3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">test</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_run</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">chrome</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite#1</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite#2</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">_</span><span style="color:#24292E;"> </span><span style="color:#032F62;">suite#3</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <strong>Runner</strong> clears its corresponding <strong>test suite</strong> run directory each time you run it.</p></div><h4 id="core" tabindex="-1">Core <a class="header-anchor" href="#core" aria-label="Permalink to &quot;Core&quot;">​</a></h4><h5 id="runner" tabindex="-1">Runner <a class="header-anchor" href="#runner" aria-label="Permalink to &quot;Runner&quot;">​</a></h5><p>In pratice, a <strong>Runner</strong> instance has to be created in each <strong>test suite</strong>. You should declare the <strong>Runner</strong> in the <strong>before</strong> hook as well as starting it. Starting the <strong>Runner</strong> creates the <strong>Puppeteer Browser</strong> and open the default page. Obviously, you should stop the <strong>Runner</strong> which causes the Puppeteer Browser to be closed in the <strong>after</strong> hook.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { core } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@kalisio/kdk/test.client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">suite</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;my-suite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">describe</span><span style="color:#E1E4E8;">(suite, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> runner</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> page</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">before</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    runner </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> core.</span><span style="color:#B392F0;">Runner</span><span style="color:#E1E4E8;">(suite, { browser: { args: [</span><span style="color:#9ECBFF;">&#39;--lang=fr&#39;</span><span style="color:#E1E4E8;">] })</span></span>
<span class="line"><span style="color:#E1E4E8;">    page </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> runner.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;my-test&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">.</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">after</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> runner.</span><span style="color:#B392F0;">stop</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { core } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@kalisio/kdk/test.client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">suite</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;my-suite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">describe</span><span style="color:#24292E;">(suite, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> runner</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> page</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">before</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    runner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> core.</span><span style="color:#6F42C1;">Runner</span><span style="color:#24292E;">(suite, { browser: { args: [</span><span style="color:#032F62;">&#39;--lang=fr&#39;</span><span style="color:#24292E;">] })</span></span>
<span class="line"><span style="color:#24292E;">    page </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> runner.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">it</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;my-test&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">.</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">after</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> runner.</span><span style="color:#6F42C1;">stop</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>A lot of options can be passed to the runner and some defaults provided using environment variables:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// computed by default as explained in the previous section</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">baseUrl</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;https://my.domain.com&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">browser</span><span style="color:#E1E4E8;">: { </span><span style="color:#6A737D;">// Puppeteer browser options</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// defaults to chrome or use BROWSER env var</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">product</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;chrome&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// defaults to false or use HEADLESS env var</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">headless</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// default to true if NODE_ENV env var equals &#39;development&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">devtools</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">defaultViewport</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1280</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// defaults to 1024 or use VIEWPORT_WIDTH env var</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// defaults to 768 or use VIEWPORT_HEIGHT env var</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// defaults to [] or use BROWSER_ARGS env var split as comma separated list of arguments</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">args</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&#39;--lang=fr&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// defaults directories</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">dataDir</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;./test/data&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">runDir</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;./test/run&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">screenrefsDir</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;./test/data/screenrefs&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">screenshotsDir</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;./test/data/screenshots&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// defaults to run or use TEST_MODE env var</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">mode</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;record&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// defaults to false, enable to save difference images</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">writeDiffs</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// defaults to 0.1, increase/decrease to allow more/less tolerance when comparing screenshots</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">matchTreshold</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0.2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Accuracy might be required to get some desired behaviours</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">geolocation</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">accuracy</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// in meters, defaults to 500</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Web push notifications allowed</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">notifications</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// computed by default as explained in the previous section</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">baseUrl</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;https://my.domain.com&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">browser</span><span style="color:#24292E;">: { </span><span style="color:#6A737D;">// Puppeteer browser options</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// defaults to chrome or use BROWSER env var</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">product</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;chrome&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// defaults to false or use HEADLESS env var</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">headless</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// default to true if NODE_ENV env var equals &#39;development&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">devtools</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">defaultViewport</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1280</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// defaults to 1024 or use VIEWPORT_WIDTH env var</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// defaults to 768 or use VIEWPORT_HEIGHT env var</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// defaults to [] or use BROWSER_ARGS env var split as comma separated list of arguments</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">args</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;--lang=fr&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// defaults directories</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">dataDir</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;./test/data&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">runDir</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;./test/run&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">screenrefsDir</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;./test/data/screenrefs&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">screenshotsDir</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;./test/data/screenshots&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// defaults to run or use TEST_MODE env var</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">mode</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;record&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// defaults to false, enable to save difference images</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">writeDiffs</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// defaults to 0.1, increase/decrease to allow more/less tolerance when comparing screenshots</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">matchTreshold</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Accuracy might be required to get some desired behaviours</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">geolocation</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">accuracy</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// in meters, defaults to 500</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Web push notifications allowed</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">notifications</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>The runner provides you with utility function to create and compare screenshots:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Create a screenshot with an optional clip zone</span></span>
<span class="line"><span style="color:#E1E4E8;">runner.</span><span style="color:#B392F0;">capture</span><span style="color:#E1E4E8;"> (screenshot_name, boundingBox)</span></span>
<span class="line"><span style="color:#6A737D;">// Create a screenshot and compare with reference screenshot with an optional tolerance and clip zone</span></span>
<span class="line"><span style="color:#E1E4E8;">runner.</span><span style="color:#B392F0;">captureAndMatch</span><span style="color:#E1E4E8;"> (screenshot_name, diffTolerance, boundingBox)</span></span>
<span class="line"><span style="color:#6A737D;">// Compare two screenshot with an optional tolerance</span></span>
<span class="line"><span style="color:#E1E4E8;">runner.</span><span style="color:#B392F0;">compareCaptures</span><span style="color:#E1E4E8;"> (screenshot_name1, screenshot_name2, threshold)</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Create a screenshot with an optional clip zone</span></span>
<span class="line"><span style="color:#24292E;">runner.</span><span style="color:#6F42C1;">capture</span><span style="color:#24292E;"> (screenshot_name, boundingBox)</span></span>
<span class="line"><span style="color:#6A737D;">// Create a screenshot and compare with reference screenshot with an optional tolerance and clip zone</span></span>
<span class="line"><span style="color:#24292E;">runner.</span><span style="color:#6F42C1;">captureAndMatch</span><span style="color:#24292E;"> (screenshot_name, diffTolerance, boundingBox)</span></span>
<span class="line"><span style="color:#6A737D;">// Compare two screenshot with an optional tolerance</span></span>
<span class="line"><span style="color:#24292E;">runner.</span><span style="color:#6F42C1;">compareCaptures</span><span style="color:#24292E;"> (screenshot_name1, screenshot_name2, threshold)</span></span></code></pre></div><h5 id="api-1" tabindex="-1">Api <a class="header-anchor" href="#api-1" aria-label="Permalink to &quot;Api&quot;">​</a></h5><p>In order to speedup testing and avoid to manually create all the required resources manually in your test, this class provides you functions to automatically create/remove:</p><ul><li>users</li><li>organisations</li><li>groups</li><li>tags</li></ul><p>For instance, the following code will setup a complete organisation with members for you:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">org</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  owner: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;Owner&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    email: </span><span style="color:#9ECBFF;">&#39;owner@kalisio.xyz&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    password: </span><span style="color:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  members: [{</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;Manager&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    email: </span><span style="color:#9ECBFF;">&#39;manager@kalisio.xyz&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    password: </span><span style="color:#9ECBFF;">&#39;xxx&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    permissions: </span><span style="color:#9ECBFF;">&#39;manager&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    groups: [{ name: </span><span style="color:#9ECBFF;">&#39;Group&#39;</span><span style="color:#E1E4E8;">, permissions: </span><span style="color:#9ECBFF;">&#39;member&#39;</span><span style="color:#E1E4E8;"> }]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }],</span></span>
<span class="line"><span style="color:#E1E4E8;">  groups: [{</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;Group&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    description: </span><span style="color:#9ECBFF;">&#39;A group&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">before</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Prepare structure for current run</span></span>
<span class="line"><span style="color:#E1E4E8;">  api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> core.</span><span style="color:#B392F0;">Api</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    appName: </span><span style="color:#9ECBFF;">&#39;crisis&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">  client </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createClient</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  runner </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> core.</span><span style="color:#B392F0;">Runner</span><span style="color:#E1E4E8;">(suite, { </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">createOrganisation</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">createMembers</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">createGroups</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">tagMembers</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">groupMembers</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  page </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> runner.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">org</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  owner: {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;Owner&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    email: </span><span style="color:#032F62;">&#39;owner@kalisio.xyz&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    password: </span><span style="color:#032F62;">&#39;xxx&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  members: [{</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;Manager&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    email: </span><span style="color:#032F62;">&#39;manager@kalisio.xyz&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    password: </span><span style="color:#032F62;">&#39;xxx&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    permissions: </span><span style="color:#032F62;">&#39;manager&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    groups: [{ name: </span><span style="color:#032F62;">&#39;Group&#39;</span><span style="color:#24292E;">, permissions: </span><span style="color:#032F62;">&#39;member&#39;</span><span style="color:#24292E;"> }]</span></span>
<span class="line"><span style="color:#24292E;">  }],</span></span>
<span class="line"><span style="color:#24292E;">  groups: [{</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;Group&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    description: </span><span style="color:#032F62;">&#39;A group&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">before</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Prepare structure for current run</span></span>
<span class="line"><span style="color:#24292E;">  api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> core.</span><span style="color:#6F42C1;">Api</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    appName: </span><span style="color:#032F62;">&#39;crisis&#39;</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createClient</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  runner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> core.</span><span style="color:#6F42C1;">Runner</span><span style="color:#24292E;">(suite, { </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">createOrganisation</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">createMembers</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">createGroups</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">tagMembers</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">groupMembers</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  page </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> runner.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <strong>Api</strong> class is useful to clear required resources in case your test fail.</p></div><p>For instance, the following code will clear the previously created complete organisation for you:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">after</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> runner.</span><span style="color:#B392F0;">stop</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// First remove groups in case removal test failed</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">removeGroups</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Then members</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">removeMembers</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Then organisation/owner</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">removeOrganisation</span><span style="color:#E1E4E8;">(org)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">after</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> runner.</span><span style="color:#6F42C1;">stop</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// First remove groups in case removal test failed</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">removeGroups</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Then members</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">removeMembers</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Then organisation/owner</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">removeOrganisation</span><span style="color:#24292E;">(org)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h5 id="utility-functions" tabindex="-1">Utility functions <a class="header-anchor" href="#utility-functions" aria-label="Permalink to &quot;Utility functions&quot;">​</a></h5><p>Explore the various utilities located in <a href="https://github.com/kalisio/kdk/tree/master/test/client" target="_blank" rel="noreferrer"><code>kdk/test/client</code></a> that will be helpful to manage:</p><ul><li>the application layout</li><li>the items of a collection</li><li>the account and login screens</li><li>the map catalog and controls</li></ul>`,47),o=[e];function t(r,c,E,i,y,d){return n(),a("div",null,o)}const F=s(p,[["render",t]]);export{h as __pageData,F as default};
