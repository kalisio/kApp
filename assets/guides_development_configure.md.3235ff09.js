import{_ as e,o as s,c as a,Q as n}from"./chunks/framework.cc1b2bf8.js";const E=JSON.parse('{"title":"Configure your app","description":"","frontmatter":{},"headers":[],"relativePath":"guides/development/configure.md","filePath":"guides/development/configure.md"}'),o={name:"guides/development/configure.md"},t=n(`<h1 id="configure-your-app" tabindex="-1">Configure your app <a class="header-anchor" href="#configure-your-app" aria-label="Permalink to &quot;Configure your app&quot;">​</a></h1><h2 id="configure-application" tabindex="-1">Configure application <a class="header-anchor" href="#configure-application" aria-label="Permalink to &quot;Configure application&quot;">​</a></h2><p>Depending on the third-party services you need you will have to do the following:</p><ul><li>Generate a secret to secure your authentication, use one generated by the Feathers CLI</li><li>Create a Firebase app in the <a href="https://console.firebase.google.com" target="_blank" rel="noreferrer">Firebase Console</a><ul><li>retrieve the <code>google-services.json</code> to be stored as a secret file in the <em>cordova</em> directory</li><li>create an Android app in your Firebase app and keep track of secret server key in <em>Parameters &gt; Cloud Messaging</em></li></ul></li><li>Create a GCM application in the <a href="https://eu-west-1.console.aws.amazon.com/sns/v2/home" target="_blank" rel="noreferrer">AWS SNS console</a> using the previous server key <ul><li>keep track of app ARN</li></ul></li><li>Create a new project for your app in the <a href="https://console.cloud.google.com" target="_blank" rel="noreferrer">Google Cloud Console</a><ul><li>Activate the Google+ API on your project</li></ul></li><li>Create an OAuth2 ID for a Web App in <a href="https://console.cloud.google.com" target="_blank" rel="noreferrer">Google Cloud Console</a> &gt; <em>API &amp; services</em><ul><li>the redirect URL should match <em>your.domain/auth/google/callback</em></li><li>download the <em>json</em> dans keep track of client ID and secret</li></ul></li><li>Create an OAuth2 App in <a href="https://github.com/organizations/kalisio/settings/applications" target="_blank" rel="noreferrer">GitHub</a><ul><li>the redirect URL should match <em>your.domain/auth/github/callback</em></li><li>download the <em>json</em> dans keep track of client ID and secret</li></ul></li><li>Create an AWS user in <a href="https://console.aws.amazon.com/iam/home" target="_blank" rel="noreferrer">IAM</a> with access to S3 API (e.g. <em>AmazonS3FullAccess</em>) <ul><li>keep track of access key ID and secret</li></ul></li><li>Create a bucket for your app in the Kalisio account <ul><li>keep track of its name</li></ul></li><li>Create an AWS user in <a href="https://console.aws.amazon.com/iam/home" target="_blank" rel="noreferrer">IAM</a> with access to SNS API (e.g. <em>AmazonSNSFullAccess</em>) <ul><li>keep track of access key ID and secret</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note: some of the previous accounts/IDs are not app specific and can be share accross multiple apps, e.g. S3, SNS, etc.</p></div><p>Create required environment variables in a script file you can source before launching your app:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> APP_SECRET</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GOOGLE_MAIL_USER</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GOOGLE_MAIL_PASSWORD</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> SNS_ACCESS_KEY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> SNS_SECRET_ACCESS_KEY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> SNS_ANDROID_ARN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> S3_ACCESS_KEY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> S3_SECRET_ACCESS_KEY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> S3_BUCKET</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GITHUB_CLIENT_ID</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GITHUB_CLIENT_SECRET</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GOOGLE_CLIENT_ID</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GOOGLE_CLIENT_SECRET</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> APP_SECRET</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GOOGLE_MAIL_USER</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GOOGLE_MAIL_PASSWORD</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> SNS_ACCESS_KEY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> SNS_SECRET_ACCESS_KEY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> SNS_ANDROID_ARN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> S3_ACCESS_KEY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> S3_SECRET_ACCESS_KEY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> S3_BUCKET</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GITHUB_CLIENT_ID</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GITHUB_CLIENT_SECRET</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GOOGLE_CLIENT_ID</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GOOGLE_CLIENT_SECRET</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span></code></pre></div><p>Then, retrieve this variables in config files like this:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">github</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">clientID</span><span style="color:#E1E4E8;">: p<wbr>rocess.env.</span><span style="color:#79B8FF;">GITHUB_CLIENT_ID</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">clientSecret</span><span style="color:#E1E4E8;">: p<wbr>rocess.env.</span><span style="color:#79B8FF;">GITHUB_CLIENT_SECRET</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">github</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">clientID</span><span style="color:#24292E;">: p<wbr>rocess.env.</span><span style="color:#005CC5;">GITHUB_CLIENT_ID</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">clientSecret</span><span style="color:#24292E;">: p<wbr>rocess.env.</span><span style="color:#005CC5;">GITHUB_CLIENT_SECRET</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>In your local development environment you should use the script to setup all the required secrets. This script should be safe-guarded in a non-public environment.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>You should never store production passwords or other sensitive production data in a clear form in public source code or config files.</p></div><p>During the <a href="./deploy.html">CI/CD process</a> the script <em>travis.env.sh</em> automatically generates a temporary environment file, based on the secret environment variables defined in your Travis repository settings or coming from a dedicated private repository (in this case only the access token of this repository needs to be in your Travis settings), to be sourced at the different stages.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You shouldn&#39;t use production secrets in development and test mode.</p></div><p>To avoid publishing by error production secrets we recommand generating an access key/token for each flavor <em>AND</em> third-party service required by your app using the following naming convention for these tokens: <strong>flavor-service</strong>. For instance you would have a <strong>dev-s3</strong>, <strong>test-s3</strong> and <strong>prod-s3</strong> keys to use the AWS S3 service respectively in your dev, test and production version of your app.</p><h2 id="configure-ci-cd" tabindex="-1">Configure CI/CD <a class="header-anchor" href="#configure-ci-cd" aria-label="Permalink to &quot;Configure CI/CD&quot;">​</a></h2><p>As the application and the CI/CD build relies on third-party services its configuration must include secrets like API keys, passwords, etc. and <strong>should not be pushed under source control unless you use private repositories or encryption</strong>. The <a href="./deploy.html">CI/CD section</a> explains how we manage it efficiently in a secure way but this section details some basic mechanisms you can use if you need to store some CI/CD specific data securely.</p><h3 id="secret-variables" tabindex="-1">Secret variables <a class="header-anchor" href="#secret-variables" aria-label="Permalink to &quot;Secret variables&quot;">​</a></h3><p>If some of the sensitive data are stored using environment variables, you have to use <a href="https://docs.travis-ci.com/user/environment-variables/" target="_blank" rel="noreferrer">encrypted environment variables</a> set either in build file or repository settings.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you&#39;d like to set a value holding multilines or special characters take care to surround it with <code>&quot;</code> so that it will be properly escaped.</p></div><h3 id="secret-file" tabindex="-1">Secret file <a class="header-anchor" href="#secret-file" aria-label="Permalink to &quot;Secret file&quot;">​</a></h3><p>If you need additional sensitive data stored through <a href="https://docs.travis-ci.com/user/encrypting-files/" target="_blank" rel="noreferrer">files</a> create a <em>secrets.tar</em> containing all secured files and encode it to <em>secrets.tar.enc</em> a using <a href="./../../tools/cli.html#travis-cli">Travis CLI</a>. This file will be decrypted before the build or whenever you need something inside.</p><p>Indeed, as mentioned in the <a href="https://docs.travis-ci.com/user/encrypting-files/#Encrypting-multiple-files" target="_blank" rel="noreferrer">documentation</a>, it is not possible to encrypt multiple files and thus requires to create a <code>tar</code> file containing the different secret files and encrypts the archive.</p><p>The table below lists for example the required files to publish a mobile app using Cordova:</p><table><thead><tr><th style="text-align:left;">File</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">keystore file</td><td style="text-align:left;">A binary file containing the private key of the certificate you need to sign the Android app</td></tr><tr><td style="text-align:left;">cordova build file</td><td style="text-align:left;">A Json file used by Cordova to sign the generated application. It uses the keystore file</td></tr><tr><td style="text-align:left;">google play service account</td><td style="text-align:left;">A Json file storing the data needed to use the Google Play service account</td></tr><tr><td style="text-align:left;">google services account</td><td style="text-align:left;">A Json file storing the the keys to access the various Google services</td></tr></tbody></table><p>You need to be logged into Travis CI before generating the secret file like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">tar cvf secrets.tar your_keystore.keystore build.json google-play.json google-services.json</span></span>
<span class="line"><span style="color:#e1e4e8;">travis encrypt-file secrets.tar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">tar cvf secrets.tar your_keystore.keystore build.json google-play.json google-services.json</span></span>
<span class="line"><span style="color:#24292e;">travis encrypt-file secrets.tar</span></span></code></pre></div>`,26),l=[t];function r(p,i,c,d,y,u){return s(),a("div",null,l)}const g=e(o,[["render",r]]);export{E as __pageData,g as default};
